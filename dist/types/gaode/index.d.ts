import "@amap/amap-jsapi-types";
import { MapOptions, MapImplements, GeoOptions } from "../types";
import type { LoaderOptions } from "./types";
declare class GaodeMap implements MapImplements {
    shouldReset: boolean;
    container: string;
    _mapLoader: any;
    private _mapInstance;
    constructor(options: LoaderOptions);
    loadMap(options: any): Promise<void>;
    createMap(options: MapOptions): void;
    setFitView(): void;
    setCenter(center: any, immediately?: boolean, duration?: number): void;
    setZoomAndCenter(zoom: any, center: any, immediately: any, duration?: any): void;
    clearMap(): void;
    getBounds(): any;
    getCenter(): any;
    addIcon(iconOptions: any): any;
    addInfoWindow(infoWindowOptions: any): any;
    clearInfoWindow(): void;
    addLines(options: any): any;
    addAnimation(animationOptions: any): any;
    getAddressLists(keywords: string, geoOptions: GeoOptions): Promise<unknown>;
    getAddress(position: [number, number], geoOptions: GeoOptions): Promise<unknown>;
    getMap(): any;
    resetLoader(): void;
    destroyMap(): void;
    clearOverlays(): void;
    private _destroyWebGL;
    private _clearScripts;
}
export default GaodeMap;
